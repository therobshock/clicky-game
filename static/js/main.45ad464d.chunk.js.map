{"version":3,"sources":["../../../../Unit Assignment 19/clicky-game/clicky-game/src/components/Card/index.js","../../../../Unit Assignment 19/clicky-game/clicky-game/src/components/Wrapper/index.js","../../../../Unit Assignment 19/clicky-game/clicky-game/src/components/ScoreBoard/index.js","../../../../Unit Assignment 19/clicky-game/clicky-game/src/App.js","../../../../Unit Assignment 19/clicky-game/clicky-game/src/index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","pickCard","id","alt","name","src","image","Wrapper","children","ScoreBoard","message","score","topScore","App","state","cards","_this","forEach","card","chosen","wrongCard","setState","console","log","_this2","this","cardArray","shuffle","components_ScoreBoard","components_Wrapper","map","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"2oEAaeA,MAVf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,SAASN,EAAMO,MACxDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCW1BC,MAZf,SAAoBd,GAClB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYJ,EAAMe,SACjCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+BJ,EAAMgB,MAArC,iBAA0DhB,EAAMiB,oCCFpED,EAAQ,EACRC,EAAW,EACXF,EAAU,uBAwECG,6MArEbC,MAAQ,CACNC,WAOFd,SAAW,SAACC,GACV,IAAIa,EAAQC,EAAKF,MAAMC,MAEvBA,EAAME,QAAQ,SAAAC,GACRA,EAAKhB,KAAOA,IACVgB,EAAKC,OACPH,EAAKI,aAELV,EAAU,6BACVQ,EAAKC,QAAS,EACdR,QAKNK,EAAKK,SAAS,CAAEN,aAIlBK,UAAY,WACV,IAAIL,EAAQC,EAAKF,MAAMC,MAEvBL,EAAU,uBAEVK,EAAME,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,QAAS,IAEhCR,EAAQC,IACVA,EAAWD,GAEbA,EAAQ,EAERK,EAAKK,SAAU,CAAEN,8FAlCjBO,QAAQC,uCAqCD,IAAAC,EAAAC,KACHC,EAAYC,IAAQF,KAAKX,MAAMC,OAEnC,OADAO,QAAQC,IAAIG,GAEZ9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,CACElB,QAASA,EACTC,MAAOA,EACPC,SAAUA,IAGZhB,EAAAC,EAAAC,cAAC+B,EAAD,KACGH,EAAUI,IAAI,SAAAZ,GAAI,OACjBtB,EAAAC,EAAAC,cAACiC,EAAD,CACA9B,SAAUuB,EAAKvB,SACfC,GAAIgB,EAAKhB,GACT8B,IAAKd,EAAKhB,GACVE,KAAMc,EAAKd,KACXE,MAAOY,EAAKZ,mBA7DJ2B,mBCNlBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.45ad464d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\" onClick={() => props.pickCard(props.id)}>\n      <div className=\"img-container\" >\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ScoreBoard(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"board\">\r\n        <div className=\"title\">Clicky Game</div>\r\n        <div className=\"dialogue\">{props.message}</div>\r\n        <div className=\"score\">Score: {props.score} | Top Score: {props.topScore}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport cards from \"./cards.json\";\nimport shuffle from \"shuffle-array\";\n\nvar score = 0;\nvar topScore = 0;\nvar message = \"Click Image to Begin\";\n\nclass App extends Component {\n  state = {\n    cards\n  };\n\n  componentDidMount() {\n    console.log();\n  }\n\n  pickCard = (id) => {\n    var cards = this.state.cards;\n\n    cards.forEach(card => {\n      if (card.id === id) {\n        if (card.chosen) {\n          this.wrongCard();\n        } else {\n          message = \"Correct! Choose another...\";\n          card.chosen = true;\n          score++;\n        }\n      }\n    });\n    \n    this.setState({ cards });\n\n  };\n\n  wrongCard = () => {\n    var cards = this.state.cards;\n\n    message = \"Incorrect! Try Again\";\n\n    cards.forEach(card => card.chosen = false);\n\n    if (score > topScore) {\n      topScore = score;\n    }\n    score = 0;\n\n    this.setState( { cards });\n  }\n\n  render() {\n    var cardArray = shuffle(this.state.cards);\n    console.log(cardArray);\n    return (\n    <div>\n      <ScoreBoard \n        message={message}\n        score={score}\n        topScore={topScore}\n      >\n      </ScoreBoard>\n      <Wrapper>\n        {cardArray.map(card => (\n          <Card\n          pickCard={this.pickCard}\n          id={card.id}\n          key={card.id}\n          name={card.name}\n          image={card.image}\n          />\n          ))}\n      </Wrapper>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}